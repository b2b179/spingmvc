<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
	<!-- JNDI方式配置数据源 -->
	<!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<property name="jndiName" value="${jndiName}"></property> </bean> -->
		
	<!-- 配置数据源 -->
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${jdbc_url}" />
		<property name="username" value="${jdbc_username}" />
		<property name="password" value="${jdbc_password}" />

		<!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="20" />
		<!-- 连接池最大空闲
		<property name="maxIdle" value="20" />
		 -->
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />
		<!-- 
		<property name="poolPreparedStatements" value="true" />
		 <property name="maxPoolPreparedStatementPerConnectionSize" value="33" /> 
		-->
		<property name="validationQuery" value="${validationQuery}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />

		<!-- 监控数据库 -->
		<!-- <property name="filters" value="stat" /> -->
		<property name="filters" value="mergeStat" />
	</bean>
	<!-- 分页插件Bean -->
	<!-- <bean id="pagePlugin" name="pagePlugin" class="com.zpark.michael.util.PagePlugin">
		<property name="dialect" value="oracle" />
        <property name="pageSqlId" value=".*ListPage.*" />
	</bean>
	<bean id="pageInfo" class="com.zpark.michael.util.PageInfo"/> -->
	<!-- 配置mybatis session工厂 -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 所有的关于mybatis的配置信息都可以放在此处 -->
		<property name="dataSource" ref="dataSource"/>
		<property name="typeAliasesPackage" value="com.zpark.michael.entity"/>
		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
		<!-- 配置分页插件 -->
		<!-- <property name="typeAliases">
			<list>
				<ref bean="pageInfo"/>
			</list>
		</property>
		
		<property name="plugins">
			<list>
				<ref bean="pagePlugin"/>
			</list>
		</property> -->
	</bean>
	<!-- 配置SQLSessionTemplate -->
	<bean id="sessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
		<constructor-arg index="0" ref="sessionFactory"/>
		<constructor-arg index="1" value="BATCH"/>
	</bean>
	<!-- 配置事务管理器 -->
	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 拦截器方式配置事物 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 以如下关键字开头的方法使用事物 -->
			<tx:method name="add*"  read-only="false" propagation="REQUIRED" />
			<tx:method name="save*" read-only="false" propagation="REQUIRED" />
			<tx:method name="insert*" read-only="false" propagation="REQUIRED" />
			<tx:method name="update*"  read-only="false" propagation="REQUIRED"/>
			<tx:method name="modify*"  read-only="false" propagation="REQUIRED"/>
			<tx:method name="edit*" read-only="false" propagation="REQUIRED" />
			<tx:method name="delete*" read-only="false" propagation="REQUIRED" />
			<tx:method name="remove*" read-only="false" propagation="REQUIRED" />
			<tx:method name="repair"  read-only="false" propagation="REQUIRED"/>
			<tx:method name="deleteAndRepair" />
			<!-- 以如下关键字开头的方法不使用事物 -->
			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="load*" propagation="SUPPORTS" />
			<tx:method name="search*" propagation="SUPPORTS" />
			<tx:method name="datagrid*" propagation="SUPPORTS" />
			<!-- 其他方法不使用事物 -->
			<tx:method name="*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	<!-- 切面，将事物用在哪些对象上 -->
	<aop:config>
		<aop:pointcut id="transactionPointcut" expression="execution(* com.zpark.michael.service..*Impl.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
	</aop:config>
</beans>